{"version":3,"sources":["webpack:///src/app/login/login.page.html","webpack:///src/app/auth.service.ts","webpack:///src/app/login/login-routing.module.ts","webpack:///src/app/login/login.module.ts","webpack:///src/app/login/login.page.scss","webpack:///src/app/login/login.page.ts","webpack:///src/app/user.model.ts"],"names":["httpOptions","headers","AuthService","http","l","window","location","host","port","hostname","length","url","protocol","user","post","providedIn","routes","path","component","LoginPageRoutingModule","imports","forChild","exports","LoginPageModule","declarations","LoginPage","authService","response","success","errorMessage","href","logIn","subscribe","selector","template","User"],"mappings":"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","file":"login-login-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>login</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-item *ngIf=\\\"errorMessage\\\" color=\\\"danger\\\">{{ errorMessage }}</ion-item>\\n\\n  <ion-item>\\n    <ion-label position=\\\"floating\\\">Username</ion-label>\\n    <ion-input type=\\\"text\\\" name=\\\"username\\\" [(ngModel)]=\\\"user.username\\\"></ion-input>\\n  </ion-item>\\n\\n  <ion-item>\\n    <ion-label position=\\\"floating\\\">Password</ion-label>\\n    <ion-input type=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"user.password\\\"></ion-input>\\n  </ion-item>\\n\\n  <ion-button color=\\\"primary\\\" expand=\\\"full\\\" (click)=\\\"onSubmit()\\\">Submit</ion-button>\\n</ion-content>\\n\";","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from './user.model';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json'})\n};\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n //Set up the URL\n\n private url: string;\n\n constructor(private http: HttpClient) {\n   let l = window.location;\n   let host:string;\n   //Are we running under Ionic or in a production environment?\n   if(l.port >= '8100'){\n     host = 'localhost:3000';\n   }else{\n     host = l.hostname + ((l.port.length>0)?':' + l.port:'');\n   }\n\n   this.url = `${l.protocol}//${host}/api/auth/`;\n }\n\n register(user: User): Observable<User>{\n   return this.http.post<User>(this.url + 'register', user, httpOptions);\n }\n\n logIn(user: User): Observable<User>{\n   return this.http.post<User>(this.url + 'login', user, httpOptions);\n }\n\n logOut(): Observable<User>{\n   return this.http.delete<User>(this.url + 'logout');\n }\n}   ","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\n\nimport { AuthService } from '../auth.service';\nimport { User } from '../user.model';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  user:User = new User();\n  errorMessage: string;\n\n  constructor(\n    private authService: AuthService\n  ) {}\n\n  ngOnInit() {}\n\n  response(response): void{\n    if(response.success===false){\n      this.errorMessage = 'Invalid Credentials';\n    }\n    \n    if(response.success===true){\n      window.location.href='/#/users';\n    }\n  }\n\n  public onSubmit():void {\n    this.authService.logIn(this.user).subscribe(\n      (response:any) => {\n       this.response (response);\n      }\n    );\n\n  }\n} ","export class User{\n    _id: string;\n    email: string;\n    first_name: string;\n    last_name: string;\n    username: string;\n    password: string;\n}"]}